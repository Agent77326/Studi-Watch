.player-overlay {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
}

.player-overlay .player-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

.player-overlay .player-center,
.player-overlay .player-controls {
    opacity: 1;
    transition: opacity 0.2s ease-in-out;
}

.player-overlay.hide .player-center,
.player-overlay.hide .player-controls {
    opacity: 0;
}

.player-overlay .player-progress,
.player-overlay .volume-control {
    display: flex;
    align-items: center;
}

.player-overlay .player-progress {
    height: 1em;
}

.player-overlay .player-controls .control-button {
    line-height: 1em;
    cursor: pointer;
    transition: background-color 0.1s ease-in-out;
}

.player-overlay .player-controls .control-button:hover {
    background-color: rgba(255, 255, 255, 0.2);
}

.player-overlay .volume-control .volume-slider {
    width: 6em;
    min-width: 6em;
    max-width: 6em;
}

.player-overlay .volume-control {
    overflow: hidden;
    width: 2.25em;
    transition: width 0.2s ease-in-out;
}

.player-overlay .volume-control:hover {
    width: 8.25em;
}

/* input range slider */
input[type="range"] {
    --value: 0%;
    --lower: #1aafff;
    --upper: rgba(255, 255, 255, 0.2);
    --thumb-size: 10px;
    --thumb-color: #fff;

    cursor: pointer;
    background: linear-gradient(to right, var(--lower) 0%, var(--lower) var(--value), var(--upper) var(--value), var(--upper) 100%);
    border-radius: 8px;
    height: 5px;
    width: 100%;
    outline: none;
    touch-action: manipulation;
    -webkit-appearance: none;
    -moz-appearance: none;
}

input[type="range"]:focus {
    outline: none;
}

/* thumb */

/* strangely I have to separate them, otherwise non of them recognizes the rule */
input[type="range"]::-moz-range-thumb {
    width: var(--thumb-size);
    height: var(--thumb-size);
    background-color: var(--thumb-color);
    border-radius: 100%;
    cursor: pointer;
}

input[type="range"]::-webkit-slider-thumb {
    width: var(--thumb-size);
    height: var(--thumb-size);
    background-color: var(--thumb-color);
    border-radius: 100%;
    cursor: pointer;
    -webkit-appearance: none;
}

input[type="range"]::-ms-thumb {
    width: var(--thumb-size);
    height: var(--thumb-size);
    background-color: var(--thumb-color);
    border-radius: 100%;
    cursor: pointer;
}

/* edge */
input[type=range]::-ms-track {
    background: transparent;
    border-color: transparent;
    border-width: 5px 0;
    color: transparent;
    width: 100%;
    height: 20px;
    cursor: pointer;
}

input[type=range]::-ms-fill-lower,
input[type=range]:focus::-ms-fill-lower {
    background: var(--lower);
    border-radius: 3px;
}

input[type=range]::-ms-fill-upper,
input[type=range]:focus::-ms-fill-upper {
    background: var(--upper);
    border-radius: 3px;
}
